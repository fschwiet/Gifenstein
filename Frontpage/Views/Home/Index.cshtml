
@{
    ViewBag.Title = "All right, you people";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Header {
    <style type="text/css">
        #sortable {list-style-type: none; margin: 0; padding: 0 }

        #sortable li {display: block; position: relative; width:592px }

        #sortable img.previous { left: 0;top: 20px; position: absolute}
        #sortable img.next { right: 0; top: 20px; position: absolute}
        #sortable img.edit { right: 240px; top: 20px;position: absolute; cursor: move}
        #sortable img.drag { right: 180px; top: 20px;position: absolute; cursor: move}
        #sortable img.delete { right: 120px; top: 20px;position: absolute; cursor: move}
        img.add { padding-left: 234px}
    </style>
}

      <div class="container">
        <div class="page-header">
          <h1>We're going to make a gif.</h1>
        </div>

        <img class="add add-before" src="/Content/add-icon.png"/>
        <ul id="sortable">
        </ul>
        <img class="add add-after" src="/Content/add-icon.png"/>
      </div>

 
 
<script type="text/javascript">

    var rowTypeManager = new RowTypeManager();

    rowTypeManager.addRowType("AllRightAnnouncement");
    rowTypeManager.addRowType("AllRightMinor");
    rowTypeManager.addRowType("AllRightMajor");

    var source = [
        {
            type: "AllRightAnnouncement"
        },
        {
            type: "AllRightMinor"
        },
        {
            type: "AllRightMajor"
        }
    ];

    function GetRenderredRow(name) {
        var row = rowTypeManager.BuildRow(name);

        var previousButton = $("<img>").attr("src", "/Content/previous.png").addClass("previous");
        var nextButton = $("<img>").attr("src", "/Content/next.png").addClass("next");
        var dragGrip = $("<img>").attr("src", "/Content/cursor_drag_arrow.jpg").addClass("drag");
        var deleteButton = $("<img>").attr("src", "/Content/x_icon.png").addClass("delete");
        var editButton = $("<img>").attr("src", "/Content/edit-icon.jpg").addClass("edit");


        var adjacentTypes = rowTypeManager.GetAdjacent(name);

        var renderredRow = row.Render();
        renderredRow.data("rowObject", row);
        renderredRow.addClass("hasRowObject");
        renderredRow.append(previousButton);
        renderredRow.append(nextButton);
        renderredRow.append(dragGrip);
        renderredRow.append(deleteButton);
        renderredRow.append(editButton);

        previousButton.click(function () {
            var newRenderred = GetRenderredRow(adjacentTypes[0]);
            renderredRow.replaceWith(newRenderred);
        });

        nextButton.click(function () {
            var newRenderred = GetRenderredRow(adjacentTypes[1]);
            renderredRow.replaceWith(newRenderred);
        });

        deleteButton.click(function() {
            renderredRow.remove();
        });

        editButton.click(function() {
            row.StartEdit();
        });

        return renderredRow;
    }

    for (var i = 0; i < source.length; i++) {
        var renderred = GetRenderredRow(source[i].type);

        $("#sortable").append(renderred);
    }

    $("img.add-before").click(function () {
        $("#sortable").prepend(GetRenderredRow(rowTypeManager.GetFirstType()));
    });
    
    $("img.add-after").click(function () {
        $("#sortable").append(GetRenderredRow(rowTypeManager.GetLastType()));
    });
    
    $(function () {
        $("#sortable").sortable({
            handle: "img.drag"
        });
        $("#sortable").disableSelection();
    });
    
    function GetDTO() {
        var dto = $("#sortable .hasRowObject").map(function(index, domElement) {
            return $(domElement).data("rowObject").ToDTO();
        });

        return dto;
    }

</script>
